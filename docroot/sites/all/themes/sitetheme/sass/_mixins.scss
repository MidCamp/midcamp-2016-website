// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

@mixin rwdImage {
  display: inline-block;
  min-width: 100%;
  width: 100%;
  max-width: auto;
  height: auto;
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

// Extends
%inline--separated {
  margin-top: 1em;
  padding-left: 0;
  
  > li {
    display: inline-block !important;
    list-style: none outside none !important;
    text-align: center;
    
    a {
      border-right: 1px solid $aqua;
      display: inline-block;
      line-height: 1;
      padding-right: 0.625em;
      margin-right: 0.625em;
    }
      
    &:first-child a {
      padding-left: 0;
    }
    
    &:last-child a {
      border-right: medium none;
    }
    
    > ul {
      display: none;
    }
  }
}